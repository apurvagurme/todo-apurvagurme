Create directory structure as follows --done--
  * lib
    - app.js
    - handlers
  * public
    * css
        -style.css
    * scripts
    - index.html
  * template
  * test
    - handlersTest.js
  - server.js

Install package.json, sinon, mocha, superTest --done--

Install eslint --done--

**** HomePage ****

* On first page there will be list of todo. --done--
* Also on first page there will be one button that will allow you to add new todo. --done--
* After adding the new todo the HomePage should get updated. --done--

**** Add todo page ****

* When we click on the button from homepage to add a todo it will open a new page and will take the information of todo. --done--
* This page will take the title and the subTasks needed to be done. --done-- 
* When we will click on ok button it will again redirect to the homepage and wil show the updated list of todo. --done--

* DATA STRUCTURE --done--

[ 
  {id: 1, title: 11-2-20, subTasks: [ {id: 1, task: Pay electricity bill}, {id: 2, task: Pay mobile balance} ] },
  {id: 2, title: 20-2-20, subTasks: [ {id: 1, task: Pay electricity bill}, {id: 2, task: Pay mobile balance} ] } 
] 

* save data in the database --done--

* Display the todoList on the homepage --done--

* Fix that when only one subTask is given it is showing undefined on the homepage --done--

* Server should not crash while only heading of the task is given --done--

* Change the display of the divisions in the homepage its coming in one line only --done--

* Add a key that will tell whether a task is completed or not --done--

* There will be one checkbox before title of the todo if user clicks it will tell that the task is completed. --done--

* Change status to done and giving boolean values would be better --done--

* Change the id of todo --done--

* Change the id of subTasks --done--

* when the user clicks on the checkbox the value of status inside the database should change to true --done--

* Create a button to delete a particular subTask while writing the todo --done--

* Add a deleteTask handler --done--

* Implement the delete button for deleting a particular subTask --done--

* Implement the delete button for deleting a particular todoBlock --done--

* Remove redundancy --done--

* Change the url index.html while new todo is added --done--

* Change the position of delete buttons --done--

* Give correct response when the given path is wrong at present it is giving contents for wrong path also --done--

* Know about XHR --done--

* Configure the data storage --done--

------------------------------------------------------------------------------------------------------------------------------

**** New Requirements ****

* Edit title: Ability to edit their existing todo list title. --done--
    
    * Change the type of title to input type --done--

    * Add save button to save the changed title --done--

    * Send a post request for changing the title --done--

    * Add the new title to the previous record --done--

* Edit tasks: Ability to edit their existing tasks. --done--

* Search by title:  Search the list by its title words. --done--

* Search by tasks: Search the todo item by its matched words. 

* User Todo's: A user can log in and log out off their account and work on their own todos.

* Home Page: If not logged in it is a login page else it is the user's todo page/dashboard.

**** extra ****

* add the subtasks in the front page. --done--

* Delete button to the end. --done--

* Submit button position --done--

* Don't submit if nothing is given --done--

* Delete button of subtask should only be visible when mouse is on the particular division --done--

* Also change the position of the  delete button of the subtask at the end of line --done--

  * Scroll when the data is exceeding out of the display block. --done--

  * Modify homepage --done--

  * Change cursor pointer when it is on the image --done--

* Rename variables --done--

* Rename functions and methods --done--

* Remove parent of parent accessing in front end --done--

* Implement search in frontend --done--

* Introduce task class

* Write detailed tests 

* Ask for confirmation before deleting 
  
* Change the text to faded text when checkbox is checked 

* Fix big sentence problem - use content editable instead of input 
